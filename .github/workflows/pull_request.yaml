---
# This is the dispatch half of a workflow
# For a brief explanation, see:
# https://github.com/TXButterflies/TXButterflies.github.io/pull/8#issue-595042251
#
# The other half is at:
# https://github.com/TXButterflies/pr.texasbutterfliesmonitoring.org/blob/main/.github/workflows/pull_request.yaml

# This level of separation is necessary:
# https://securitylab.github.com/research/github-actions-preventing-pwn-requests
name: Dispatch Pull Request
on:
  # For a description, see:
  # https://docs.github.com/en/actions/reference/events-that-trigger-workflows#pull_request_target
  pull_request_target:
    paths-ignore:
      - README.md
    branches:
      - main

jobs:
  dispatch:
    name: Dispatch to other repository
    runs-on: ubuntu-latest
    if: "${{ github.event_name == 'pull_request_target' }}"
    steps:
      - name: Run script to trigger GitHub Action workflow in other repository
        shell: bash
        env:
          # Pull Request payload example:
          # https://docs.github.com/en/developers/webhooks-and-events/webhook-events-and-payloads#pull_request
          PULL_REQUEST_ID: "${{ github.event.pull_request.number }}"
          # PERSONAL_ACCESS_TOKEN is a token generated for the account hosting
          # the rendering repository, not the account running this script.
          # Generate one here:
          # https://github.com/settings/tokens/new
          # The token should have public_repo scope set, and the user the token
          # was generated for should have the ability to trigger
          # workflow_dispatch events in the rendering repository.
          PULL_REQUEST_USER: "${{ secrets.PULL_REQUEST_USER }}"
          PULL_REQUEST_TOKEN: "${{ secrets.PULL_REQUEST_TOKEN }}"
          RENDER_REPOSITORY_OWNER: "${{ github.repository_owner }}"
          RENDER_REPOSITORY_NAME: "pr.texasbutterfliesmonitoring.org"
        run: |
          set -eu
          cat "${GITHUB_EVENT_PATH}" \
          | jq --compact-output '{
              "ref": $github_ref,
              "inputs": {
                  "pull_request_id": $pull_request_id,
                  "pull_request_event": (. | @json),
              }
          }' \
              --arg github_ref "${GITHUB_REF}" \
              --arg pull_request_id "${PULL_REQUEST_ID}" \
          | curl \
              --fail \
              --fail-early \
              --request POST \
              --header "Accept: application/vnd.github.v3+json" \
              --user "${PULL_REQUEST_USER}:${PULL_REQUEST_TOKEN}" \
              --post301 --post302 --post303 \
              --data "@-" \
              --url "https://api.github.com/repos/${RENDER_REPOSITORY_OWNER}/${RENDER_REPOSITORY_NAME}/actions/workflows/pull_request.yaml/dispatches"

      - name: Make Comment
        shell: bash
        env:
          COMMENT_USER: "github-actions"
          GITHUB_TOKEN: "${{ github.token }}"
          # See: https://docs.github.com/en/developers/webhooks-and-events/webhook-events-and-payloads#webhook-payload-example-30
          PULL_REQUEST_COMMENTS_URL: "${{ github.event.pull_request.issue_url }}"
          RENDER_HOMEPAGE: "https://pr.texasbutterfliesmonitoring.org/${{ github.event.pull_request.number }}/index.html"
          RENDER_REPOSITORY_OWNER: "${{ github.repository_owner }}"
          RENDER_REPOSITORY_NAME: "pr.texasbutterfliesmonitoring.org"
          # This filename
          WORKFLOW_FILE: "pull_request.yaml"
        run: |
          set -eu
          printf \
          '# DO NOT MERGE BEFORE PREVIEWING THE CHANGES

          [Preview the changes at this link.](%s)

          If you have visited the above link before, you may have to refresh your browser to see the changes. This is due to browsers caching data from websites. [This link has more information about this](https://refreshyourcache.com/en/cache/).

          If the preview looks fine, you can merge the pull request.

          If the preview is not fine, or not available, [there are logs available at this link.](<https://github.com/%s/%s/actions/workflows/%s?query=event%3Aworkflow_dispatch+branch%3Amain>)
          
          _note: this comment was generated automatically_' \
              "${RENDER_HOMEPAGE}" \
              "${RENDER_REPOSITORY_OWNER}" \
              "${RENDER_REPOSITORY_NAME}" \
              "${WORKFLOW_FILE}" \
              | jq '{"body":.}' --raw-input --slurp --compact-output \
              | curl \
                  --request POST \
                  --header "Accept: application/vnd.github.v3+json" \
                  --user "${COMMENT_USER}:${GITHUB_TOKEN}" \
                  --data "@-" \
                  --url "${PULL_REQUEST_COMMENTS_URL}/comments"
...
