---
# This workflow is meant to be hosted in two repositories:
# - The dispatcher
# - The renderer
#
# The dispatcher runs the dispatch job on a pull_request event, and triggers
# the renderer to run the render job, using information from the pull request.
#
# This level of separation is necessary:
# https://securitylab.github.com/research/github-actions-preventing-pwn-requests
name: Render Pull Request
on:
  # For a description, see:
  # https://docs.github.com/en/actions/reference/events-that-trigger-workflows#pull_request_target
  pull_request:
    paths-ignore:
      - README.md
    branches:
      - main

  workflow_dispatch:
    inputs:
      pull_request_id:
        description: |
          The number assigned tot he pull request. See:
          https://docs.github.com/en/github/collaborating-with-issues-and-pull-requests/checking-out-pull-requests-locally#modifying-an-inactive-pull-request-locally
        required: true

jobs:
  dispatch:
    name: Dispatch to other repository
    runs-on: ubuntu-latest
    if: "${{ github.event_name == 'pull_request' }}"
    steps:
      - name: Run script to trigger GitHub Action workflow in other repository
        shell: bash
        env:
          # Pull Request payload example:
          # https://docs.github.com/en/developers/webhooks-and-events/webhook-events-and-payloads#pull_request
          PULL_REQUEST_ID: "${{ github.event.pull_request.number }}"
          PERSONAL_ACCESS_TOKEN: "${{ secrets.PULL_REQUEST_TOKEN }}"
        run: |
          curl --fail \
               --silent \
               --show-error \
               --location \
               'https://raw.githubusercontent.com/mawillcockson/pr.texasbutterfliesmonitoring.org/main/workflow_command.sh' \
               | bash

  render:
    name: Build pull request site with Hugo
    runs-on: ubuntu-latest
    if: "${{ github.even_name == 'workflow_dispatch' }}"
    steps:
      - name: Checkout gh-pages branch
        uses: actions/checkout@v2
        with:
          path: gh-pages/

      - name: Render pull request
        shell: bash
        env:
          PULL_REQUEST_ID: "${{ github.events.input.pull_request_id }}"
        run: |
          ACTIONS_USERNAME='github-actions'
          ACTIONS_EMAIL='41898282+github-actions[bot]@users.noreply.github.com'
          RENDER_URL="https://mawillcockson.github.io/pr.texasbutterfliesmonitoring.org/${PULL_REQUEST_ID}/"
          git config --global user.name "${ACTIONS_USERNAME}"
          git config --global user.email "${ACTIONS_EMAIL}"
          git clone --depth 1 --single-branch \
              --branch "pull/${PULL_REQUEST_ID}/head" \
              'https://github.com/TXButterflies/TXButterflies.github.io.git' \
              ./pull_request/
          sudo apt install -y snap jq
          sudo snap install hugo --channel=extended
          mkdir -p "./gh-pages/${PULL_REQUEST_ID}/"
          /snap/bin/hugo \
              --baseURL "${RENDER_URL}" \
              --source ./pull_request/ \
              --destination "./gh-pages/${PULL_REQUEST_ID}" \
              --logFile ./hugo.log \
              --verboseLog
          cd ./gh-pages/
          git add -A :/
          git commit -m "publish TXButterflies/TXButterflies.github.io#${PULL_REQUEST_ID}"
          git push
          cd
          printf '[view this pull request here](%s)\n\n' "${RENDER_URL}" > comment.md
          printf '`hugo` output:\n```' >> comment.md
          cat hugo.log >> comment.md
          printf '\n```\n\n_note: this comment was generated automatically_' >> comment.md
          jq '{"body":.}' --raw-input --slurp --compact-output < comment.md > comment.json
          curl \
              --request POST \
              --header "Accept: application/vnd.github.v3+json" \
              "https://api.github.com/repos/TXButterflies/TXButterflies.github.io/issues/${PULL_REQUEST_ID}/comments" \
              --data "@comment.json"
...
